{
  "name": "nicegui.ui.radio",
  "source_path": "elements/radio.py",
  "description": "Use to create radio button groups for single selection from multiple options.",
  "direct_ancestors": [
    "ChoiceElement",
    "DisableableElement"
  ],
  "quasar_components": [
    {
      "name": "QOptionGroup",
      "url": "https://quasar.dev/vue-components/option-group"
    },
    {
      "name": "QRadio",
      "url": "https://quasar.dev/vue-components/radio"
    }
  ],
  "category": "Input",
  "python_props": {
    "__init__": {
      "options": {
        "type": "Union[List, Dict]",
        "description": "Available options",
        "formats": [
          "List of values: ['value1', 'value2', ...]",
          "Dict mapping values to labels: {'value1': 'Label 1', ...}"
        ]
      },
      "value": {
        "type": "Any",
        "description": "Initially selected value",
        "default": "None",
        "validation": "Must be in options"
      },
      "on_change": {
        "type": "Optional[Handler[ValueChangeEventArguments]]",
        "description": "Callback for selection changes",
        "default": "None"
      }
    }
  },
  "events": {
    "value_change": {
      "description": "Emitted when selection changes",
      "arguments": "ValueChangeEventArguments(sender=self, client=self.client, value=new_value)"
    }
  },
  "quasar_props": {
    "options": "Array of option objects",
    "type": "Set to 'radio'",
    "left-label": "Place label on left",
    "inline": "Display options inline",
    "dense": "Reduce padding",
    "dark": "Dark theme",
    "color": "Color from palette",
    "keep-color": "Keep color when unchecked",
    "size": "Radio button size",
    "disable": "Disable group"
  },
  "usage_examples": {
    "basic_radio": {
      "description": "Simple radio group with list",
      "code": [
        "options = ['Red', 'Green', 'Blue']",
        "radio = ui.radio(options)",
        "def on_change(e):",
        "    print(f'Selected: {e.value}')",
        "radio.on_change(on_change)"
      ]
    },
    "with_labels": {
      "description": "Radio group with custom labels",
      "code": [
        "options = {",
        "    'sm': 'Small',",
        "    'md': 'Medium',",
        "    'lg': 'Large'",
        "}",
        "ui.radio(options, value='md')"
      ]
    },
    "dynamic_options": {
      "description": "Update options dynamically",
      "code": [
        "radio = ui.radio(['A', 'B'])",
        "def update_options():",
        "    radio.set_options(['X', 'Y', 'Z'], value='X')"
      ]
    },
    "styled_radio": {
      "description": "Customized appearance",
      "code": [
        "ui.radio(['1', '2', '3']).props('inline color=primary')"
      ]
    }
  },
  "styling": {
    "description": "Can be styled using Quasar props or Tailwind classes",
    "examples": {
      "classes": [
        "gap-{size} (option spacing)",
        "p-{size} (padding)",
        "rounded-{size}",
        "bg-{color}"
      ]
    }
  },
  "common_use_cases": [
    "Single choice selections",
    "Exclusive options",
    "Settings choices",
    "Form inputs",
    "Configuration options"
  ]
}