{
  "name": "nicegui.ui.menu",
  "source_path": "elements/menu.py",
  "description": "Use to create popup menus that appear relative to their parent element.",
  "quasar_props": {
    "menu": {
      "auto-close": "Close on any click without server round-trip",
      "target": "Element that triggers the menu",
      "anchor": "Corner of triggering element",
      "self": "Corner of menu to align",
      "offset": "Offset from target in pixels",
      "scroll-target": "CSS selector of scrolling container",
      "transition-show": "Animation when showing",
      "transition-hide": "Animation when hiding",
      "persistent": "Prevent dismissal by outside click",
      "no-route-dismiss": "Prevent auto-dismissal on route change",
      "fit": "Fit to target width",
      "cover": "Cover target element"
    },
    "menu_item": {
      "clickable": "Always true for menu items",
      "active": "Highlight as active",
      "dense": "Reduce padding",
      "inset-level": "Indentation level",
      "tabindex": "Tab order",
      "tag": "HTML tag to render"
    }
  },
  "usage_examples": {
    "basic_menu": {
      "description": "Simple menu with items",
      "code": [
        "with ui.button('Open Menu'):",
        "    with ui.menu() as menu:",
        "        ui.menu_item('Option 1', on_click=lambda: print('1'))",
        "        ui.menu_item('Option 2', on_click=lambda: print('2'))"
      ]
    },
    "persistent_menu": {
      "description": "Menu that requires explicit close",
      "code": [
        "with ui.button('Settings'):",
        "    with ui.menu() as menu:",
        "        menu.props('persistent')",
        "        ui.menu_item('Save')",
        "        ui.menu_item('Cancel', on_click=menu.close)"
      ]
    },
    "nested_content": {
      "description": "Menu with complex content",
      "code": [
        "with ui.button('More'):",
        "    with ui.menu():",
        "        with ui.row():",
        "            ui.icon('settings')",
        "            ui.menu_item('Settings')",
        "        ui.separator()",
        "        ui.menu_item('Logout')"
      ]
    },
    "programmatic_control": {
      "description": "Control menu from outside",
      "code": [
        "menu = ui.menu()",
        "with menu:",
        "    ui.menu_item('Item')",
        "ui.button('Toggle', on_click=menu.toggle)"
      ]
    }
  },
  "styling": {
    "description": "Can be styled using Tailwind CSS classes or custom CSS",
    "examples": {
      "classes": [
        "w-{size} (width)",
        "max-w-{size} (max width)",
        "rounded-{size}",
        "shadow-{size}",
        "bg-{color}"
      ]
    }
  },
  "common_use_cases": [
    "Dropdown menus",
    "Action menus",
    "Settings menus",
    "Context-specific options",
    "Navigation menus"
  ],
  "direct_ancestors": [],
  "quasar_components": [],
  "python_props": {
    "__init__": {}
  }
}